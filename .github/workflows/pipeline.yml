name: Deployment pipeline

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  hello_world_job:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Say hello
        run: echo "Hello World!"
      - name: Print date
        run: date
      - name: List directory
        run: ls -l

  end-to-end_tests:
    name: end-to-end_tests
    needs: hello_world_job
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
      - name: End-to-end test outcome
        run: echo "End-to-end tests completed."
        if: always()

  other_tests:
    name: other_tests
    needs: end-to-end_tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Make build script executable
        run: chmod +x build_step.sh
      - name: Run Jest & ESLint tests
        run: ./build_step.sh
      - name: Jest & lint test outcome
        run: echo "Jest and ESLint tests completed."
        if: always()

  deployment:
    needs: other_tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Trigger deployment
        if: (!contains(join(github.event.commits.*.message, ' '), '#skip'))
        run: curl -f https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
      - name: Deployment outcome
        run: echo "Deployment step completed."
        if: always()

  bump_version:
    needs: deployment
    if: ${{ success() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Bump version and push tag
        if: (!contains(join(github.event.commits.*.message, ' '), '#skip'))
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
      - name: Versioning outcome
        if: always()
        run: echo "Versioning step completed."

  discord_notify:
    needs: [end-to-end_tests, other_tests, deployment, bump_version]
    runs-on: ubuntu-22.04
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: |
            **@simotoivanentivi23v0603**

            *${{ github.actor }}* made a ${{ github.event_name }} on **${{ github.repository }}**.

            **Commit:** \`\`${{ github.sha }}\`\`
            **Status:**
            - **E2E Tests:** ${{ needs.end-to-end_tests.result }}
            - **Jest/Lint:** ${{ needs.other_tests.result }}
            - **Deployment:** ${{ needs.deployment.result }}
            - **Version bump:** ${{ needs.bump_version.result }}